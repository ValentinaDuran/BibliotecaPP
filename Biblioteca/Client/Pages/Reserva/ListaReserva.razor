@page "/reserva-list"

@using Biblioteca.Client.Services
@using Biblioteca.BD.Data.Entidades
@inject IHttpService http
@using MudBlazor
@inject IDialogService DialogService
@inject ISnackbar SnackbarService
@inject NavigationManager NavManager
<NavMenu></NavMenu>
<div class="centered-content " >
    <MudCard MaxWidth="2500px" class="mx-auto my-auto">
       
        <MudCardContent>
            <div style="display: flex;
    justify-content: center;">
                <MudText  Typo="Typo.h3" class="centered-content"> <b>Reservas</b></MudText>
            </div>
            
                <MudButton @onclick="OpenDialog" Variant="Variant.Filled" Color="Color.Primary">
                    Agregar Reserva
                </MudButton>

                <MudTable  Items="@reservas" FixedHeader="@fixed_header" FixedFooter="@fixed_footer" Height="@(fixed_header || fixed_footer ? "600px" : "")" HorizontalScrollbar="false">
                    <HeaderContent>
                        <MudTh style="white-space: nowrap;">Prestatario</MudTh>
                        <MudTh style="white-space: nowrap;">Material</MudTh>
                        <MudTh style="white-space: nowrap;">Curso</MudTh>
                        <MudTh style="white-space: nowrap;">Fecha de Reserva</MudTh>
                        <MudTh style="white-space: nowrap;">Hora de Reserva</MudTh>
                        <MudTh>Fecha de devolucion</MudTh>
                        <MudTh>Hora de devolucion</MudTh>
                           <MudTh>Observacion</MudTh>
                           <MudTh>Acciones</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Prestatario" class="ampliar-columna">@context.Prestatario.NombreApellido</MudTd>
                        <MudTd DataLabel="material" Style="font-size:13px">
                        <b>Codigo:</b>@context.Inventario.Codigo
                        <b>Material:</b> @context.Inventario.TituloNombre 
                        <b>Autor/Marca:</b> @context.Inventario.AutorMarca
                       
                        </MudTd>
                        <MudTd DataLabel="Curso" Style="font-size:13px">
                            <b>Año:</b>
                            @context.Curso.Año
                            <b>Division:</b>
                            @context.Curso.Division <br />
                           <b>Nivel:</b> @context.Curso.Nivel 
                            <b>Turno:</b> @context.Curso.Turno
                            
                        </MudTd>
                        
                        <MudTd DataLabel="Fecha de entrega">@context.FechaEntrega.ToString("d")</MudTd  >
                        <MudTd DataLabel="Hora de entrega">@context.HoraEntrega.ToString(@"hh\:mm")</MudTd>                       
                        <MudTd DataLabel="Fecha de Devolución">@context.FechaDevolucion.ToString("d")</MudTd>
                        <MudTd DataLabel="Hora de Devolución">@context.HoraDevolucion.ToString(@"hh\:mm")</MudTd>
                        <MudTd DataLabel="Observacion">@context.Observacion</MudTd>
                        <MudTd DataLabel="Acciones">
                        <MudChipSet MultiSelection="true" Filter="filter">
                            <MudChip Text="green" Variant="Variant.Filled" Color="Color.Success" @onclick="() => MarcarPrestamo(context)">Prestado</MudChip>
                            </MudChipSet>
                            </MudTd>
                        

                    </RowTemplate>
               </MudTable>
            
        </MudCardContent>
    </MudCard>

</div>

@code {
    List<Reserva> reservas;
    bool fixed_header = true;
    bool fixed_footer = true;

    bool isOpen = false;
     bool filter = true;


    void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<ReservaFormDialog>("Agregar Reserva", options);

    }

private async Task MarcarPrestamo(Reserva context)
{
    // Cambiar el valor de Pasar
       SnackbarService.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;
        SnackbarService.Add("Prestamo registrado", Severity.Success);
        // Cambiar el valor de Pasar
        context.Pasar = true;
        await Task.Delay(1700);
        // Realizar la solicitud PUT para actualizar el valor en el servidor
    var respuesta = await http.Put($"api/ReservaController/{context.ReservaId}", context);
    NavManager.NavigateTo("/reserva-list", forceLoad: true);
    
}
     protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        await Leer();
    }

       private async Task Leer()
    {
           var respuesta = await http.Get<List<Reserva>>("api/ReservaController");
    if (!respuesta.Error)
    {
        reservas = respuesta.Respuesta.Where(r => !r.Pasar).ToList();
    }
    }
}
