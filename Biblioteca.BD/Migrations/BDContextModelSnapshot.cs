// <auto-generated />
using System;
using Biblioteca.BD.Data.Entidades;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Biblioteca.BD.Migrations
{
    [DbContext(typeof(BDContext))]
    partial class BDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Biblioteca.BD.Data.Entidades.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursoId"));

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<int>("Division")
                        .HasColumnType("int");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("Prestatario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Turno")
                        .HasColumnType("int");

                    b.HasKey("CursoId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entidades.Deudor", b =>
                {
                    b.Property<string>("DeudorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Curso")
                        .HasColumnType("int");

                    b.Property<bool>("Devuelto")
                        .HasColumnType("bit");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("FechaDevolucion")
                        .HasColumnType("int");

                    b.Property<int>("FechaEntrega")
                        .HasColumnType("int");

                    b.Property<int>("HoraDevolucion")
                        .HasColumnType("int");

                    b.Property<int>("HoraEntrega")
                        .HasColumnType("int");

                    b.Property<int>("Id_Inventario")
                        .HasColumnType("int");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prestatario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeudorId");

                    b.ToTable("Deudores");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entidades.Inventario", b =>
                {
                    b.Property<int>("InventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventarioId"));

                    b.Property<string>("AutorMarca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<string>("TituloNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InventarioId");

                    b.HasIndex("TipoId");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entidades.MaterialMalEstado", b =>
                {
                    b.Property<int>("MaterialMalEstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialMalEstadoId"));

                    b.Property<string>("AutorMarca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("MaterialId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TituloNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialMalEstadoId");

                    b.ToTable("MaterialesMalEstado");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entidades.Prestamo", b =>
                {
                    b.Property<int>("PrestamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrestamoId"));

                    b.Property<int>("Curso")
                        .HasColumnType("int");

                    b.Property<bool>("Devuelto")
                        .HasColumnType("bit");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("FechaDevolucion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prestatario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrestamoId");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entidades.Prestatario", b =>
                {
                    b.Property<string>("PrestatarioId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Curso")
                        .HasColumnType("int");

                    b.Property<string>("NombreApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrestatarioId");

                    b.ToTable("Prestatarios");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entidades.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaId"));

                    b.Property<int>("Curso")
                        .HasColumnType("int");

                    b.Property<bool>("Devuelto")
                        .HasColumnType("bit");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("FechaDevolucion")
                        .HasColumnType("int");

                    b.Property<int>("FechaEntrega")
                        .HasColumnType("int");

                    b.Property<int>("HoraDevolucion")
                        .HasColumnType("int");

                    b.Property<int>("HoraEntrega")
                        .HasColumnType("int");

                    b.Property<string>("InventarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrestatarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservaId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entidades.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TipoMat")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Tipos");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entidades.Inventario", b =>
                {
                    b.HasOne("Biblioteca.BD.Data.Entidades.Tipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });
#pragma warning restore 612, 618
        }
    }
}
